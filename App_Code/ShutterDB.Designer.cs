//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("shutterEyeModel1", "FK_registration_accType", "accType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(shutterEyeModel1.accType), "registration", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(shutterEyeModel1.registration), true)]
[assembly: EdmRelationshipAttribute("shutterEyeModel1", "FK_comment_photoUpload", "photoUpload", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(shutterEyeModel1.photoUpload), "comment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(shutterEyeModel1.comment), true)]
[assembly: EdmRelationshipAttribute("shutterEyeModel1", "FK_comment_registration", "registration", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(shutterEyeModel1.registration), "comment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(shutterEyeModel1.comment), true)]
[assembly: EdmRelationshipAttribute("shutterEyeModel1", "FK_like_photoUpload", "photoUpload", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(shutterEyeModel1.photoUpload), "like", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(shutterEyeModel1.like), true)]
[assembly: EdmRelationshipAttribute("shutterEyeModel1", "FK_like_registration", "registration", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(shutterEyeModel1.registration), "like", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(shutterEyeModel1.like), true)]
[assembly: EdmRelationshipAttribute("shutterEyeModel1", "FK_photoUpload_registration1", "registration", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(shutterEyeModel1.registration), "photoUpload", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(shutterEyeModel1.photoUpload), true)]
[assembly: EdmRelationshipAttribute("shutterEyeModel1", "FK_verifyUser_registration", "registration", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(shutterEyeModel1.registration), "verifyUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(shutterEyeModel1.verifyUser), true)]

#endregion

namespace shutterEyeModel1
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class shutterEyeEntities2 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new shutterEyeEntities2 object using the connection string found in the 'shutterEyeEntities2' section of the application configuration file.
        /// </summary>
        public shutterEyeEntities2() : base("name=shutterEyeEntities2", "shutterEyeEntities2")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new shutterEyeEntities2 object.
        /// </summary>
        public shutterEyeEntities2(string connectionString) : base(connectionString, "shutterEyeEntities2")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new shutterEyeEntities2 object.
        /// </summary>
        public shutterEyeEntities2(EntityConnection connection) : base(connection, "shutterEyeEntities2")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<accType> accTypes
        {
            get
            {
                if ((_accTypes == null))
                {
                    _accTypes = base.CreateObjectSet<accType>("accTypes");
                }
                return _accTypes;
            }
        }
        private ObjectSet<accType> _accTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<comment> comments
        {
            get
            {
                if ((_comments == null))
                {
                    _comments = base.CreateObjectSet<comment>("comments");
                }
                return _comments;
            }
        }
        private ObjectSet<comment> _comments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<like> likes
        {
            get
            {
                if ((_likes == null))
                {
                    _likes = base.CreateObjectSet<like>("likes");
                }
                return _likes;
            }
        }
        private ObjectSet<like> _likes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<photoUpload> photoUploads
        {
            get
            {
                if ((_photoUploads == null))
                {
                    _photoUploads = base.CreateObjectSet<photoUpload>("photoUploads");
                }
                return _photoUploads;
            }
        }
        private ObjectSet<photoUpload> _photoUploads;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<registration> registrations
        {
            get
            {
                if ((_registrations == null))
                {
                    _registrations = base.CreateObjectSet<registration>("registrations");
                }
                return _registrations;
            }
        }
        private ObjectSet<registration> _registrations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<verifyUser> verifyUsers
        {
            get
            {
                if ((_verifyUsers == null))
                {
                    _verifyUsers = base.CreateObjectSet<verifyUser>("verifyUsers");
                }
                return _verifyUsers;
            }
        }
        private ObjectSet<verifyUser> _verifyUsers;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the accTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaccTypes(accType accType)
        {
            base.AddObject("accTypes", accType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the comments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocomments(comment comment)
        {
            base.AddObject("comments", comment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the likes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolikes(like like)
        {
            base.AddObject("likes", like);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the photoUploads EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTophotoUploads(photoUpload photoUpload)
        {
            base.AddObject("photoUploads", photoUpload);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the registrations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToregistrations(registration registration)
        {
            base.AddObject("registrations", registration);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the verifyUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToverifyUsers(verifyUser verifyUser)
        {
            base.AddObject("verifyUsers", verifyUser);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="uId">No Metadata Documentation available.</param>
        public int verIns(Nullable<global::System.Int32> uId)
        {
            ObjectParameter uIdParameter;
            if (uId.HasValue)
            {
                uIdParameter = new ObjectParameter("uId", uId);
            }
            else
            {
                uIdParameter = new ObjectParameter("uId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("verIns", uIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="uId">No Metadata Documentation available.</param>
        public int regSel(Nullable<global::System.Int32> uId)
        {
            ObjectParameter uIdParameter;
            if (uId.HasValue)
            {
                uIdParameter = new ObjectParameter("uId", uId);
            }
            else
            {
                uIdParameter = new ObjectParameter("uId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("regSel", uIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="firstName">No Metadata Documentation available.</param>
        /// <param name="lastName">No Metadata Documentation available.</param>
        /// <param name="userName">No Metadata Documentation available.</param>
        /// <param name="password">No Metadata Documentation available.</param>
        /// <param name="emailId">No Metadata Documentation available.</param>
        /// <param name="mobileNo">No Metadata Documentation available.</param>
        /// <param name="accountType">No Metadata Documentation available.</param>
        /// <param name="country">No Metadata Documentation available.</param>
        /// <param name="state">No Metadata Documentation available.</param>
        /// <param name="city">No Metadata Documentation available.</param>
        /// <param name="profilePhoto">No Metadata Documentation available.</param>
        /// <param name="gender">No Metadata Documentation available.</param>
        public int regIns(global::System.String firstName, global::System.String lastName, global::System.String userName, global::System.String password, global::System.String emailId, Nullable<global::System.Int32> mobileNo, Nullable<global::System.Int32> accountType, global::System.String country, global::System.String state, global::System.String city, global::System.String profilePhoto, global::System.String gender)
        {
            ObjectParameter firstNameParameter;
            if (firstName != null)
            {
                firstNameParameter = new ObjectParameter("firstName", firstName);
            }
            else
            {
                firstNameParameter = new ObjectParameter("firstName", typeof(global::System.String));
            }
    
            ObjectParameter lastNameParameter;
            if (lastName != null)
            {
                lastNameParameter = new ObjectParameter("lastName", lastName);
            }
            else
            {
                lastNameParameter = new ObjectParameter("lastName", typeof(global::System.String));
            }
    
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("userName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("userName", typeof(global::System.String));
            }
    
            ObjectParameter passwordParameter;
            if (password != null)
            {
                passwordParameter = new ObjectParameter("password", password);
            }
            else
            {
                passwordParameter = new ObjectParameter("password", typeof(global::System.String));
            }
    
            ObjectParameter emailIdParameter;
            if (emailId != null)
            {
                emailIdParameter = new ObjectParameter("emailId", emailId);
            }
            else
            {
                emailIdParameter = new ObjectParameter("emailId", typeof(global::System.String));
            }
    
            ObjectParameter mobileNoParameter;
            if (mobileNo.HasValue)
            {
                mobileNoParameter = new ObjectParameter("mobileNo", mobileNo);
            }
            else
            {
                mobileNoParameter = new ObjectParameter("mobileNo", typeof(global::System.Int32));
            }
    
            ObjectParameter accountTypeParameter;
            if (accountType.HasValue)
            {
                accountTypeParameter = new ObjectParameter("accountType", accountType);
            }
            else
            {
                accountTypeParameter = new ObjectParameter("accountType", typeof(global::System.Int32));
            }
    
            ObjectParameter countryParameter;
            if (country != null)
            {
                countryParameter = new ObjectParameter("country", country);
            }
            else
            {
                countryParameter = new ObjectParameter("country", typeof(global::System.String));
            }
    
            ObjectParameter stateParameter;
            if (state != null)
            {
                stateParameter = new ObjectParameter("state", state);
            }
            else
            {
                stateParameter = new ObjectParameter("state", typeof(global::System.String));
            }
    
            ObjectParameter cityParameter;
            if (city != null)
            {
                cityParameter = new ObjectParameter("city", city);
            }
            else
            {
                cityParameter = new ObjectParameter("city", typeof(global::System.String));
            }
    
            ObjectParameter profilePhotoParameter;
            if (profilePhoto != null)
            {
                profilePhotoParameter = new ObjectParameter("profilePhoto", profilePhoto);
            }
            else
            {
                profilePhotoParameter = new ObjectParameter("profilePhoto", typeof(global::System.String));
            }
    
            ObjectParameter genderParameter;
            if (gender != null)
            {
                genderParameter = new ObjectParameter("gender", gender);
            }
            else
            {
                genderParameter = new ObjectParameter("gender", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("regIns", firstNameParameter, lastNameParameter, userNameParameter, passwordParameter, emailIdParameter, mobileNoParameter, accountTypeParameter, countryParameter, stateParameter, cityParameter, profilePhotoParameter, genderParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="shutterEyeModel1", Name="accType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class accType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new accType object.
        /// </summary>
        /// <param name="acId">Initial value of the acId property.</param>
        /// <param name="acType">Initial value of the acType property.</param>
        public static accType CreateaccType(global::System.Int32 acId, global::System.String acType)
        {
            accType accType = new accType();
            accType.acId = acId;
            accType.acType = acType;
            return accType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 acId
        {
            get
            {
                return _acId;
            }
            set
            {
                if (_acId != value)
                {
                    OnacIdChanging(value);
                    ReportPropertyChanging("acId");
                    _acId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("acId");
                    OnacIdChanged();
                }
            }
        }
        private global::System.Int32 _acId;
        partial void OnacIdChanging(global::System.Int32 value);
        partial void OnacIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String acType
        {
            get
            {
                return _acType;
            }
            set
            {
                OnacTypeChanging(value);
                ReportPropertyChanging("acType");
                _acType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("acType");
                OnacTypeChanged();
            }
        }
        private global::System.String _acType;
        partial void OnacTypeChanging(global::System.String value);
        partial void OnacTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shutterEyeModel1", "FK_registration_accType", "registration")]
        public EntityCollection<registration> registrations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<registration>("shutterEyeModel1.FK_registration_accType", "registration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<registration>("shutterEyeModel1.FK_registration_accType", "registration", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="shutterEyeModel1", Name="comment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class comment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new comment object.
        /// </summary>
        /// <param name="cId">Initial value of the cId property.</param>
        /// <param name="uId">Initial value of the uId property.</param>
        /// <param name="pId">Initial value of the pId property.</param>
        /// <param name="cDate">Initial value of the cDate property.</param>
        public static comment Createcomment(global::System.Int32 cId, global::System.Int32 uId, global::System.Int32 pId, global::System.DateTime cDate)
        {
            comment comment = new comment();
            comment.cId = cId;
            comment.uId = uId;
            comment.pId = pId;
            comment.cDate = cDate;
            return comment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 cId
        {
            get
            {
                return _cId;
            }
            set
            {
                if (_cId != value)
                {
                    OncIdChanging(value);
                    ReportPropertyChanging("cId");
                    _cId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("cId");
                    OncIdChanged();
                }
            }
        }
        private global::System.Int32 _cId;
        partial void OncIdChanging(global::System.Int32 value);
        partial void OncIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 uId
        {
            get
            {
                return _uId;
            }
            set
            {
                OnuIdChanging(value);
                ReportPropertyChanging("uId");
                _uId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("uId");
                OnuIdChanged();
            }
        }
        private global::System.Int32 _uId;
        partial void OnuIdChanging(global::System.Int32 value);
        partial void OnuIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pId
        {
            get
            {
                return _pId;
            }
            set
            {
                OnpIdChanging(value);
                ReportPropertyChanging("pId");
                _pId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("pId");
                OnpIdChanged();
            }
        }
        private global::System.Int32 _pId;
        partial void OnpIdChanging(global::System.Int32 value);
        partial void OnpIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String comment1
        {
            get
            {
                return _comment1;
            }
            set
            {
                Oncomment1Changing(value);
                ReportPropertyChanging("comment1");
                _comment1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("comment1");
                Oncomment1Changed();
            }
        }
        private global::System.String _comment1;
        partial void Oncomment1Changing(global::System.String value);
        partial void Oncomment1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime cDate
        {
            get
            {
                return _cDate;
            }
            set
            {
                OncDateChanging(value);
                ReportPropertyChanging("cDate");
                _cDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cDate");
                OncDateChanged();
            }
        }
        private global::System.DateTime _cDate;
        partial void OncDateChanging(global::System.DateTime value);
        partial void OncDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shutterEyeModel1", "FK_comment_photoUpload", "photoUpload")]
        public photoUpload photoUpload
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<photoUpload>("shutterEyeModel1.FK_comment_photoUpload", "photoUpload").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<photoUpload>("shutterEyeModel1.FK_comment_photoUpload", "photoUpload").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<photoUpload> photoUploadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<photoUpload>("shutterEyeModel1.FK_comment_photoUpload", "photoUpload");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<photoUpload>("shutterEyeModel1.FK_comment_photoUpload", "photoUpload", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shutterEyeModel1", "FK_comment_registration", "registration")]
        public registration registration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<registration>("shutterEyeModel1.FK_comment_registration", "registration").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<registration>("shutterEyeModel1.FK_comment_registration", "registration").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<registration> registrationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<registration>("shutterEyeModel1.FK_comment_registration", "registration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<registration>("shutterEyeModel1.FK_comment_registration", "registration", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="shutterEyeModel1", Name="like")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class like : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new like object.
        /// </summary>
        /// <param name="lId">Initial value of the lId property.</param>
        /// <param name="uId">Initial value of the uId property.</param>
        /// <param name="pId">Initial value of the pId property.</param>
        /// <param name="lDate">Initial value of the lDate property.</param>
        public static like Createlike(global::System.Int32 lId, global::System.Int32 uId, global::System.Int32 pId, global::System.DateTime lDate)
        {
            like like = new like();
            like.lId = lId;
            like.uId = uId;
            like.pId = pId;
            like.lDate = lDate;
            return like;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 lId
        {
            get
            {
                return _lId;
            }
            set
            {
                if (_lId != value)
                {
                    OnlIdChanging(value);
                    ReportPropertyChanging("lId");
                    _lId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("lId");
                    OnlIdChanged();
                }
            }
        }
        private global::System.Int32 _lId;
        partial void OnlIdChanging(global::System.Int32 value);
        partial void OnlIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 uId
        {
            get
            {
                return _uId;
            }
            set
            {
                OnuIdChanging(value);
                ReportPropertyChanging("uId");
                _uId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("uId");
                OnuIdChanged();
            }
        }
        private global::System.Int32 _uId;
        partial void OnuIdChanging(global::System.Int32 value);
        partial void OnuIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pId
        {
            get
            {
                return _pId;
            }
            set
            {
                OnpIdChanging(value);
                ReportPropertyChanging("pId");
                _pId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("pId");
                OnpIdChanged();
            }
        }
        private global::System.Int32 _pId;
        partial void OnpIdChanging(global::System.Int32 value);
        partial void OnpIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime lDate
        {
            get
            {
                return _lDate;
            }
            set
            {
                OnlDateChanging(value);
                ReportPropertyChanging("lDate");
                _lDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("lDate");
                OnlDateChanged();
            }
        }
        private global::System.DateTime _lDate;
        partial void OnlDateChanging(global::System.DateTime value);
        partial void OnlDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shutterEyeModel1", "FK_like_photoUpload", "photoUpload")]
        public photoUpload photoUpload
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<photoUpload>("shutterEyeModel1.FK_like_photoUpload", "photoUpload").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<photoUpload>("shutterEyeModel1.FK_like_photoUpload", "photoUpload").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<photoUpload> photoUploadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<photoUpload>("shutterEyeModel1.FK_like_photoUpload", "photoUpload");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<photoUpload>("shutterEyeModel1.FK_like_photoUpload", "photoUpload", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shutterEyeModel1", "FK_like_registration", "registration")]
        public registration registration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<registration>("shutterEyeModel1.FK_like_registration", "registration").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<registration>("shutterEyeModel1.FK_like_registration", "registration").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<registration> registrationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<registration>("shutterEyeModel1.FK_like_registration", "registration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<registration>("shutterEyeModel1.FK_like_registration", "registration", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="shutterEyeModel1", Name="photoUpload")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class photoUpload : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new photoUpload object.
        /// </summary>
        /// <param name="pId">Initial value of the pId property.</param>
        /// <param name="uId">Initial value of the uId property.</param>
        /// <param name="path">Initial value of the path property.</param>
        /// <param name="phName">Initial value of the phName property.</param>
        /// <param name="phDate">Initial value of the phDate property.</param>
        public static photoUpload CreatephotoUpload(global::System.Int32 pId, global::System.Int32 uId, global::System.String path, global::System.String phName, global::System.DateTime phDate)
        {
            photoUpload photoUpload = new photoUpload();
            photoUpload.pId = pId;
            photoUpload.uId = uId;
            photoUpload.path = path;
            photoUpload.phName = phName;
            photoUpload.phDate = phDate;
            return photoUpload;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pId
        {
            get
            {
                return _pId;
            }
            set
            {
                if (_pId != value)
                {
                    OnpIdChanging(value);
                    ReportPropertyChanging("pId");
                    _pId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("pId");
                    OnpIdChanged();
                }
            }
        }
        private global::System.Int32 _pId;
        partial void OnpIdChanging(global::System.Int32 value);
        partial void OnpIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 uId
        {
            get
            {
                return _uId;
            }
            set
            {
                OnuIdChanging(value);
                ReportPropertyChanging("uId");
                _uId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("uId");
                OnuIdChanged();
            }
        }
        private global::System.Int32 _uId;
        partial void OnuIdChanging(global::System.Int32 value);
        partial void OnuIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String path
        {
            get
            {
                return _path;
            }
            set
            {
                OnpathChanging(value);
                ReportPropertyChanging("path");
                _path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("path");
                OnpathChanged();
            }
        }
        private global::System.String _path;
        partial void OnpathChanging(global::System.String value);
        partial void OnpathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String phName
        {
            get
            {
                return _phName;
            }
            set
            {
                OnphNameChanging(value);
                ReportPropertyChanging("phName");
                _phName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("phName");
                OnphNameChanged();
            }
        }
        private global::System.String _phName;
        partial void OnphNameChanging(global::System.String value);
        partial void OnphNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String myReg
        {
            get
            {
                return _myReg;
            }
            set
            {
                OnmyRegChanging(value);
                ReportPropertyChanging("myReg");
                _myReg = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("myReg");
                OnmyRegChanged();
            }
        }
        private global::System.String _myReg;
        partial void OnmyRegChanging(global::System.String value);
        partial void OnmyRegChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String caption
        {
            get
            {
                return _caption;
            }
            set
            {
                OncaptionChanging(value);
                ReportPropertyChanging("caption");
                _caption = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("caption");
                OncaptionChanged();
            }
        }
        private global::System.String _caption;
        partial void OncaptionChanging(global::System.String value);
        partial void OncaptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime phDate
        {
            get
            {
                return _phDate;
            }
            set
            {
                OnphDateChanging(value);
                ReportPropertyChanging("phDate");
                _phDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("phDate");
                OnphDateChanged();
            }
        }
        private global::System.DateTime _phDate;
        partial void OnphDateChanging(global::System.DateTime value);
        partial void OnphDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String location
        {
            get
            {
                return _location;
            }
            set
            {
                OnlocationChanging(value);
                ReportPropertyChanging("location");
                _location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("location");
                OnlocationChanged();
            }
        }
        private global::System.String _location;
        partial void OnlocationChanging(global::System.String value);
        partial void OnlocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String phType
        {
            get
            {
                return _phType;
            }
            set
            {
                OnphTypeChanging(value);
                ReportPropertyChanging("phType");
                _phType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("phType");
                OnphTypeChanged();
            }
        }
        private global::System.String _phType;
        partial void OnphTypeChanging(global::System.String value);
        partial void OnphTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shutterEyeModel1", "FK_comment_photoUpload", "comment")]
        public EntityCollection<comment> comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<comment>("shutterEyeModel1.FK_comment_photoUpload", "comment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<comment>("shutterEyeModel1.FK_comment_photoUpload", "comment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shutterEyeModel1", "FK_like_photoUpload", "like")]
        public EntityCollection<like> likes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<like>("shutterEyeModel1.FK_like_photoUpload", "like");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<like>("shutterEyeModel1.FK_like_photoUpload", "like", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shutterEyeModel1", "FK_photoUpload_registration1", "registration")]
        public registration registration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<registration>("shutterEyeModel1.FK_photoUpload_registration1", "registration").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<registration>("shutterEyeModel1.FK_photoUpload_registration1", "registration").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<registration> registrationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<registration>("shutterEyeModel1.FK_photoUpload_registration1", "registration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<registration>("shutterEyeModel1.FK_photoUpload_registration1", "registration", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="shutterEyeModel1", Name="registration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class registration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new registration object.
        /// </summary>
        /// <param name="uId">Initial value of the uId property.</param>
        /// <param name="firstName">Initial value of the firstName property.</param>
        /// <param name="userName">Initial value of the userName property.</param>
        /// <param name="password">Initial value of the password property.</param>
        /// <param name="emailId">Initial value of the emailId property.</param>
        /// <param name="gender">Initial value of the gender property.</param>
        /// <param name="accType">Initial value of the accType property.</param>
        public static registration Createregistration(global::System.Int32 uId, global::System.String firstName, global::System.String userName, global::System.String password, global::System.String emailId, global::System.String gender, global::System.Int32 accType)
        {
            registration registration = new registration();
            registration.uId = uId;
            registration.firstName = firstName;
            registration.userName = userName;
            registration.password = password;
            registration.emailId = emailId;
            registration.gender = gender;
            registration.accType = accType;
            return registration;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 uId
        {
            get
            {
                return _uId;
            }
            set
            {
                if (_uId != value)
                {
                    OnuIdChanging(value);
                    ReportPropertyChanging("uId");
                    _uId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("uId");
                    OnuIdChanged();
                }
            }
        }
        private global::System.Int32 _uId;
        partial void OnuIdChanging(global::System.Int32 value);
        partial void OnuIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String firstName
        {
            get
            {
                return _firstName;
            }
            set
            {
                OnfirstNameChanging(value);
                ReportPropertyChanging("firstName");
                _firstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("firstName");
                OnfirstNameChanged();
            }
        }
        private global::System.String _firstName;
        partial void OnfirstNameChanging(global::System.String value);
        partial void OnfirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String lastName
        {
            get
            {
                return _lastName;
            }
            set
            {
                OnlastNameChanging(value);
                ReportPropertyChanging("lastName");
                _lastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("lastName");
                OnlastNameChanged();
            }
        }
        private global::System.String _lastName;
        partial void OnlastNameChanging(global::System.String value);
        partial void OnlastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String userName
        {
            get
            {
                return _userName;
            }
            set
            {
                OnuserNameChanging(value);
                ReportPropertyChanging("userName");
                _userName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("userName");
                OnuserNameChanged();
            }
        }
        private global::System.String _userName;
        partial void OnuserNameChanging(global::System.String value);
        partial void OnuserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String emailId
        {
            get
            {
                return _emailId;
            }
            set
            {
                OnemailIdChanging(value);
                ReportPropertyChanging("emailId");
                _emailId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("emailId");
                OnemailIdChanged();
            }
        }
        private global::System.String _emailId;
        partial void OnemailIdChanging(global::System.String value);
        partial void OnemailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> mobileNo
        {
            get
            {
                return _mobileNo;
            }
            set
            {
                OnmobileNoChanging(value);
                ReportPropertyChanging("mobileNo");
                _mobileNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("mobileNo");
                OnmobileNoChanged();
            }
        }
        private Nullable<global::System.Int32> _mobileNo;
        partial void OnmobileNoChanging(Nullable<global::System.Int32> value);
        partial void OnmobileNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String country
        {
            get
            {
                return _country;
            }
            set
            {
                OncountryChanging(value);
                ReportPropertyChanging("country");
                _country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("country");
                OncountryChanged();
            }
        }
        private global::System.String _country;
        partial void OncountryChanging(global::System.String value);
        partial void OncountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String state
        {
            get
            {
                return _state;
            }
            set
            {
                OnstateChanging(value);
                ReportPropertyChanging("state");
                _state = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("state");
                OnstateChanged();
            }
        }
        private global::System.String _state;
        partial void OnstateChanging(global::System.String value);
        partial void OnstateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String city
        {
            get
            {
                return _city;
            }
            set
            {
                OncityChanging(value);
                ReportPropertyChanging("city");
                _city = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("city");
                OncityChanged();
            }
        }
        private global::System.String _city;
        partial void OncityChanging(global::System.String value);
        partial void OncityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String profilePhoto
        {
            get
            {
                return _profilePhoto;
            }
            set
            {
                OnprofilePhotoChanging(value);
                ReportPropertyChanging("profilePhoto");
                _profilePhoto = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("profilePhoto");
                OnprofilePhotoChanged();
            }
        }
        private global::System.String _profilePhoto;
        partial void OnprofilePhotoChanging(global::System.String value);
        partial void OnprofilePhotoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String gender
        {
            get
            {
                return _gender;
            }
            set
            {
                OngenderChanging(value);
                ReportPropertyChanging("gender");
                _gender = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("gender");
                OngenderChanged();
            }
        }
        private global::System.String _gender;
        partial void OngenderChanging(global::System.String value);
        partial void OngenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 accType
        {
            get
            {
                return _accType;
            }
            set
            {
                OnaccTypeChanging(value);
                ReportPropertyChanging("accType");
                _accType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("accType");
                OnaccTypeChanged();
            }
        }
        private global::System.Int32 _accType;
        partial void OnaccTypeChanging(global::System.Int32 value);
        partial void OnaccTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shutterEyeModel1", "FK_registration_accType", "accType")]
        public accType accType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<accType>("shutterEyeModel1.FK_registration_accType", "accType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<accType>("shutterEyeModel1.FK_registration_accType", "accType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<accType> accType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<accType>("shutterEyeModel1.FK_registration_accType", "accType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<accType>("shutterEyeModel1.FK_registration_accType", "accType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shutterEyeModel1", "FK_comment_registration", "comment")]
        public EntityCollection<comment> comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<comment>("shutterEyeModel1.FK_comment_registration", "comment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<comment>("shutterEyeModel1.FK_comment_registration", "comment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shutterEyeModel1", "FK_like_registration", "like")]
        public EntityCollection<like> likes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<like>("shutterEyeModel1.FK_like_registration", "like");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<like>("shutterEyeModel1.FK_like_registration", "like", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shutterEyeModel1", "FK_photoUpload_registration1", "photoUpload")]
        public EntityCollection<photoUpload> photoUploads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<photoUpload>("shutterEyeModel1.FK_photoUpload_registration1", "photoUpload");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<photoUpload>("shutterEyeModel1.FK_photoUpload_registration1", "photoUpload", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shutterEyeModel1", "FK_verifyUser_registration", "verifyUser")]
        public EntityCollection<verifyUser> verifyUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<verifyUser>("shutterEyeModel1.FK_verifyUser_registration", "verifyUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<verifyUser>("shutterEyeModel1.FK_verifyUser_registration", "verifyUser", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="shutterEyeModel1", Name="verifyUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class verifyUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new verifyUser object.
        /// </summary>
        /// <param name="vId">Initial value of the vId property.</param>
        /// <param name="uId">Initial value of the uId property.</param>
        public static verifyUser CreateverifyUser(global::System.Int32 vId, global::System.Int32 uId)
        {
            verifyUser verifyUser = new verifyUser();
            verifyUser.vId = vId;
            verifyUser.uId = uId;
            return verifyUser;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 vId
        {
            get
            {
                return _vId;
            }
            set
            {
                if (_vId != value)
                {
                    OnvIdChanging(value);
                    ReportPropertyChanging("vId");
                    _vId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("vId");
                    OnvIdChanged();
                }
            }
        }
        private global::System.Int32 _vId;
        partial void OnvIdChanging(global::System.Int32 value);
        partial void OnvIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 uId
        {
            get
            {
                return _uId;
            }
            set
            {
                OnuIdChanging(value);
                ReportPropertyChanging("uId");
                _uId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("uId");
                OnuIdChanged();
            }
        }
        private global::System.Int32 _uId;
        partial void OnuIdChanging(global::System.Int32 value);
        partial void OnuIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("shutterEyeModel1", "FK_verifyUser_registration", "registration")]
        public registration registration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<registration>("shutterEyeModel1.FK_verifyUser_registration", "registration").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<registration>("shutterEyeModel1.FK_verifyUser_registration", "registration").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<registration> registrationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<registration>("shutterEyeModel1.FK_verifyUser_registration", "registration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<registration>("shutterEyeModel1.FK_verifyUser_registration", "registration", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
